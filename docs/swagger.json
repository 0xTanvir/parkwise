{
    "swagger": "2.0",
    "info": {
        "description": "Describes parkWise REST API",
        "title": "parkWise API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "./",
    "paths": {
        "/v1/park": {
            "post": {
                "description": "Park",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vehicle"
                ],
                "summary": "Park",
                "parameters": [
                    {
                        "description": "Park params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Park"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "parked successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.Error"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/parking-lots": {
            "post": {
                "description": "Create a new Parking Lot in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ParkingLot"
                ],
                "summary": "Add a new Parking Lot",
                "parameters": [
                    {
                        "description": "ParkingLot params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ParkingLot"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.IDWrapper"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.Error"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/parking-lots/{id}": {
            "get": {
                "description": "Get ParkingLotStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ParkingLot"
                ],
                "summary": "Get ParkingLotStatus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Lot ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ParkingSlotStatus"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/reports/daily": {
            "get": {
                "description": "DailyReport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ParkingLot"
                ],
                "summary": "DailyReport",
                "parameters": [
                    {
                        "type": "string",
                        "description": "date=YYYY-MM-DD",
                        "name": "date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DailyReport"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.Error"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/slots/maintenance": {
            "post": {
                "description": "Parking slot maintenance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ParkingLot"
                ],
                "summary": "Parking slot maintenance",
                "parameters": [
                    {
                        "description": "Maintenance params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Maintenance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Maintenance updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.Error"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/unpark": {
            "post": {
                "description": "UnPark",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vehicle"
                ],
                "summary": "UnPark",
                "parameters": [
                    {
                        "description": "UnPark params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UnPark"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Charge"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.Error"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.Charge": {
            "type": "object",
            "properties": {
                "bill": {
                    "type": "integer"
                },
                "vehicleNumber": {
                    "type": "string"
                }
            }
        },
        "dto.DailyReport": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "totalFeesCollected": {
                    "type": "integer"
                },
                "totalVehicles": {
                    "type": "integer"
                },
                "totatlParkingTimeHours": {
                    "type": "number"
                }
            }
        },
        "dto.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.IDWrapper": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "dto.Maintenance": {
            "type": "object",
            "properties": {
                "maintenance": {
                    "description": "true to enable maintenance mode, false to disable",
                    "type": "boolean"
                },
                "slotId": {
                    "type": "integer"
                }
            }
        },
        "dto.Park": {
            "type": "object",
            "properties": {
                "lotId": {
                    "type": "integer"
                },
                "vehicleNumber": {
                    "type": "string"
                }
            }
        },
        "dto.ParkingLot": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.ParkingSlotStatus": {
            "type": "object",
            "properties": {
                "slotId": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "vehicleNumber": {
                    "type": "string"
                }
            }
        },
        "dto.UnPark": {
            "type": "object",
            "properties": {
                "slotId": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        }
    }
}